{"version":3,"file":"5.605ba3dac5e7b5e21e7f.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Divider from '@material-ui/core/Divider';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport IconChevronRight from '@material-ui/icons/ChevronRight';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nimport Header from '../components/Header'\nimport {Link} from '../routes'\nimport withRoot from '../src/withRoot';\nimport styles from '../src/styles'\n\nclass Index extends React.Component {\n\n  render() {\n\n    const { classes, content } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header classes={classes}/>\n        <div>\n          <div className={classes.contentSection} style={{backgroundColor: blueGrey[50]}} className={classes.outerContainer}>\n            <Typography variant=\"display3\" className={classes.bigLineSpacing}>\n              Hi, I'm Nathan.\n            </Typography>\n            \n            <Typography variant=\"display1\">\n              I'm a product-focused software engineer at Uber working in mobile and web.\n            </Typography>\n\n            <Typography variant=\"display1\" className={classes.bigLineSpacing }>\n              Here's what I've been upto lately.\n            </Typography>\n          </div>\n          {content.map(section => (\n              <GridList color=\"primary\" cellHeight={180} className={[classes.gridList, classes.bigLineSpacing, classes.outerContainer].join(' ')} key={section.title} cols={12}>\n                <GridListTile style={{ height: 'auto' }} cols={12}>\n                  <ListSubheader component=\"div\">\n                    <Typography variant=\"subheading\" style={{paddingBottom: 24}}>\n                      {section.title} ({section.dates})\n                    </Typography>\n                  </ListSubheader>\n                </GridListTile>\n                {section.products.map(product => (\n                    <GridListTile key={product.title} cols={4} xs={12} className={classes.productItem}>\n                      <Link route=\"product\" params={{slug: product.slug}} passHref >\n                        <img src={product.imageUrl} alt={product.title} className={classes.objectFitCover} style={{backgroundColor: product.color}}/>\n                      </Link>\n                      <Link route=\"product\" params={{slug: product.slug}} passHref >\n                      <GridListTileBar\n                        title={product.title}\n                        actionIcon={\n                          <IconButton className={classes.icon}>\n                            <IconChevronRight />\n                          </IconButton>\n                        }\n                      />\n                  </Link>\n                </GridListTile>\n              ))}\n          </GridList>\n        ))}\n      </div>\n    </div>\n    );\n  }\n}\n\nIndex.propTypes = {\n  classes: PropTypes.object.isRequired,\n  content: PropTypes.array.isRequired\n};\n\nexport default withRoot(withStyles(styles)(Index));\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AANA;AATA;AA+BA;;;;;;;;;;;AAtDA;AACA;AAwDA;AACA;AACA;AAFA;AACA;AAIA;AACA;AADA;;;;;;;;;;;;AA9DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}