{"version":3,"file":"1.1738436dc6f0db7130e4.hot-update.js","sources":["webpack:///src/getPageContext.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n\nimport { SheetsRegistry } from 'jss';\nimport { createMuiTheme, createGenerateClassName } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/green';\nimport lightblue from '@material-ui/core/colors/cyan';\n\nconst titleFonts = ['display4', 'display3', 'display2', 'display1', 'headline', 'title', 'subheading']\nconst typography = Object.assign(...titleFonts.map(font => ({\n  [font]: {  fontFamily: ['\"Nunito\"', 'Roboto', 'sans-serif'].join(',')}\n})));\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: lightblue,\n    secondary: amber,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n  typography: typography\n});\n\nconst content = [\n  {\n    title: \"Safety at Uber\",\n    dates: \"2017–NOW\",\n    products: [\n      {\n        slug: \"rider-emergency-assistance\",\n        title: \"Emergency Assistance\",\n        body: \"Uber’s original Emergency Assistance feature was rolled out in 2017 in response to safety concerns \" \n          + \"in India and over time began suffering from a costly UI problem: an unacceptably high rate of accidental dials \"\n          + \"that threatened our urgent response team’s ability to filter out genuine incidents and meet their response time \"\n          + \"SLAs. Working with our product designer and another Android engineer, we solved this problem by replacing the ‘Get Help’ \"\n          + \"button with a custom slide-to-call flow that resulted in lower false-positive rates without affecting the success \"\n          + \"rate for genuine incidents. Special attention was given to creating affordances for the swipe gesture (accomplished using \"\n          + \"a subtle pulsing animation) while giving the interaction a sense of urgency (the slider fades from gray to bright red as you swipe towards the call threshold).\",\n        imageUrl: \"/static/slider-animated.gif\",\n        color: amber[200]\n      },\n      {\n        slug: \"trusted-contacts\",\n        title: \"Trusted Contacts\",\n        body: \"As part of Uber’s Safety-focused 2018 strategy (https://www.uber.com/newsroom/getting-serious-safety/), we wanted \"\n        + \"to reimagine the Share My Trip feature through the lense of Trust & Safety. We determined that the existing flow had \"\n        + \"too much friction and lacked discoverability to be used habitually by our users. The Trusted Contacts feature solves \"\n        + \"for this by giving riders a prominent, one-tap shortcut for sharing a trip with their loved ones or most important \"\n        + \"contacts. Balancing safety with privacy was a key priority for us so shares always require the user’s explicit \"\n        + \"opt-in while your trusted contact selection and the types of trips you are prompted to share are always user configurable.\",\n        imageUrl: \"/static/trusted-contacts-mockup.png\",\n        color: lightblue[300]\n      },\n      {\n        slug: \"dhl\",\n        title: \"Driving Hour Limits\",\n        body: \"Driving research shows that too many consecutive hours behind the wheel increases the risk of accidents. In 2017, \"\n        + \"we launched a global driving time policy that limits the number of hours our partners can drive per 24-hour window. We \"\n        + \"communicate this policy through multiple touchpoints in Carbon - providing a persistent driving time tracker to partners \"\n        + \"and warning them when they are approaching a forced break time. Since some cities have passed their own specific driving \"\n        + \"limit laws for TNCs, it was critical to build a UI framework that was dynamic and flexible enough to accommodate many possible \"\n        + \"regional variations.\",\n        imageUrl: \"/static/dhl-mockup.png\",\n        color: amber[600]\n      }\n    ]\n  },\n  {\n    title: \"Uber Partnerships & Loyalty\",\n    dates: \"2016-2017\",\n    products: [\n      {\n        slug: \"autoplay-music\",\n        title: \"Autoplay Music\",\n        body: \"To help drive usage of Uber’s native Spotify/Pandora integration for riders, we developed an ‘autoplay’ feature that allowed riders to select a favorite music station that would automatically start playing whenever they entered a music-enabled Uber.\",\n        imageUrl: \"/static/autoplay-mockup.png\",\n        color: lightblue[100]\n      },\n      {\n        slug: \"rrw\",\n        title: \"Ride Request Widget\",\n        body: \"AWorked with the business development team to encapsulate the core Uber ride request flow as a lightweight HTML5-based widget for integration into third-party mobile apps like Alipay. Because we were targeting partnerships in low-connectivity markets like India and China, we experimented with various styles of no-map ride request flows and ultimately chose to position the car on an animated progress bar to represent the driver’s progress towards the rider during pickup.\",\n        imageUrl: \"/static/rrw-mockup.png\",\n        color: amber[300]\n      },\n      {\n        slug: \"contextual-notification\",\n        title: \"Contextual Notifications\",\n        body: \"Prototyped and productionized the first version of a Contextual Notification framework for the Uber rider app - a channel \"\n        + \"for high-priority, temporal messages that inform riders of trip events without blocking any core UX. This project was originally \"\n        + \"commissioned to inform riders when they are eligible for free upgrades or loyalty rewards but designed to accommodate diverse use cases.\",\n        imageUrl: \"/static/contextual-notification-mockup.png\",\n        color: lightblue[600]\n      }\n    ]\n  }\n]\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName(),\n    // Content\n    content\n  };\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  }\n\n  // Reuse context on the client-side.\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext();\n  }\n\n  return global.__INIT_MATERIAL_UI__;\n}\n\n\n// WEBPACK FOOTER //\n// src/getPageContext.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AADA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAZA;AAeA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAXA;AAcA;AACA;AACA;AAMA;AACA;AAVA;AAaA;AACA;AACA;AAMA;AACA;AAVA;AA7BA;AA4CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAGA;AACA;AAPA;AAlBA;AACA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AA5HA;AACA;AAMA;AAeA;AA2EA;AAcA;;;;;;;;;A","sourceRoot":""}